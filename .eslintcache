[{"C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\index.js":"1","C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\reportWebVitals.js":"2","C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\App.js":"3","C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\DataFetch.js":"4","C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\GlobalGraphs.js":"5","C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\SearchPage.js":"6","C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\utils.js":"7","C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\ComparePage.js":"8","C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\CountryPage.js":"9","C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\ContinentCharts.js":"10","C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\GlobalCards.js":"11","C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\ContinentCards.js":"12","C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\GlobalTable.js":"13","C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\TopCountryCard.js":"14","C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\CompareGraphs.js":"15","C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\CompareTable.js":"16"},{"size":595,"mtime":1613243959313,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":1350,"mtime":1613236812074,"results":"20","hashOfConfig":"18"},{"size":5444,"mtime":1613940308985,"results":"21","hashOfConfig":"18"},{"size":9174,"mtime":1613848085678,"results":"22","hashOfConfig":"18"},{"size":16148,"mtime":1613877745683,"results":"23","hashOfConfig":"18"},{"size":3318,"mtime":1610304531779,"results":"24","hashOfConfig":"18"},{"size":3238,"mtime":1613950501890,"results":"25","hashOfConfig":"18"},{"size":24628,"mtime":1613950120549,"results":"26","hashOfConfig":"18"},{"size":10813,"mtime":1613950359032,"results":"27","hashOfConfig":"18"},{"size":5305,"mtime":1613694345903,"results":"28","hashOfConfig":"18"},{"size":4365,"mtime":1613950313305,"results":"29","hashOfConfig":"18"},{"size":3968,"mtime":1613934764250,"results":"30","hashOfConfig":"18"},{"size":4623,"mtime":1613255822484,"results":"31","hashOfConfig":"18"},{"size":8064,"mtime":1613950613841,"results":"32","hashOfConfig":"18"},{"size":3980,"mtime":1613950536812,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"nm6njv",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\index.js",[],["72","73"],"C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\reportWebVitals.js",[],"C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\App.js",[],"C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\DataFetch.js",["74","75","76"],"C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\GlobalGraphs.js",["77","78"],"import \"./index.css\";\r\nimport React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Chart from \"chart.js\";\r\nimport \"./utils\";\r\nimport MediaCard from \"./GlobalCards\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport ContinentCharts from \"./ContinentCharts\";\r\nimport ContinentCards from \"./ContinentCards\";\r\nimport GlobalTable from \"./GlobalTable\";\r\nimport TopCountryCard from \"./TopCountryCard\";\r\n\r\nclass GlobalGraphs extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.worldConfirmedChart = this.worldConfirmedChart.bind(this);\r\n    this.worldConfirmedLogChart = this.worldConfirmedLogChart.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n      this.worldConfirmedChart();\r\n      this.worldConfirmedLogChart();\r\n  }\r\n\r\n  worldConfirmedChart() {\r\n    var date = Object.keys(this.props.historyGlobal.cases);\r\n    var data1 = Object.values(this.props.historyGlobal.cases);\r\n    var data2 = Object.values(this.props.historyGlobal.deaths);\r\n    var data3 = Object.values(this.props.historyGlobal.recovered);\r\n    var config = {\r\n      type: \"line\",\r\n      data: {\r\n        labels: date,\r\n        datasets: [\r\n          {\r\n            label: \"Cases\",\r\n            backgroundColor: \"#00A6B4\",\r\n            borderColor: \"#00A6B4\",\r\n            data: data1,\r\n            fill: false,\r\n          },\r\n          {\r\n            label: \"Deaths\",\r\n            backgroundColor: \"#B21F00\",\r\n            borderColor: \"#B21F00\",\r\n            data: data2,\r\n            fill: false,\r\n          },\r\n          {\r\n            label: \"Recovered\",\r\n            backgroundColor: \"#2FDE00\",\r\n            borderColor: \"#2FDE00\",\r\n            data: data3,\r\n            fill: false,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        aspectRatio: 1.5,\r\n        legend: {\r\n          labels: {\r\n            usePointStyle: true},\r\n          display: true,\r\n          position: \"bottom\",\r\n        },\r\n        responsive: true,\r\n        title: {\r\n          display: true,\r\n          text: \"Cases\",\r\n          fontSize: 20,\r\n        },\r\n        tooltips: {\r\n          mode: \"index\",\r\n          intersect: false,\r\n          callbacks: {\r\n            label: function(tooltipItem, data) {\r\n              var dataLabel = data.labels[tooltipItem.index];\r\n              var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();\r\n    \r\n              if (Chart.helpers.isArray(dataLabel)) {\r\n                dataLabel = dataLabel.slice();\r\n                dataLabel[0] += value;\r\n              } else {\r\n                dataLabel += value;\r\n              }\r\n              return dataLabel;\r\n            }\r\n          }\r\n        },\r\n        hover: {\r\n          mode: \"nearest\",\r\n          intersect: true,\r\n        },\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              gridLines: {\r\n                display: true,\r\n                drawBorder: true,\r\n                drawOnChartArea: false,\r\n              },\r\n              display: true,\r\n              type: \"time\",\r\n              time: {\r\n                unit: \"day\",\r\n              },\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: \"Time\",\r\n              },\r\n            },\r\n          ],\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                beginAtZero: true,\r\n                userCallback: function (value, index, values) {\r\n                  value = value.toString();\r\n                  value = value.split(/(?=(?:...)*$)/);\r\n                  value = value.join(\",\");\r\n                  return value;\r\n                },\r\n              },\r\n              gridLines: {\r\n                display: true,\r\n                drawBorder: true,\r\n                drawOnChartArea: false,\r\n              },\r\n              display: true,\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: \"Cases\",\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    };\r\n    var ctx = document.getElementById(\"canvasConfirmed\").getContext(\"2d\");\r\n    window.myLine = new Chart(ctx, config);\r\n\r\n    var colorNames = Object.keys(window.chartColors);\r\n  }\r\n\r\n  worldConfirmedLogChart() {\r\n    var date = Object.keys(this.props.historyGlobal.cases);\r\n    var data1 = Object.values(this.props.historyGlobal.cases);\r\n    var data2 = Object.values(this.props.historyGlobal.deaths);\r\n    var data3 = Object.values(this.props.historyGlobal.recovered);\r\n    var config = {\r\n      type: \"line\",\r\n      data: {\r\n        labels: date,\r\n        datasets: [\r\n          {\r\n            label: \"Global\",\r\n            backgroundColor: \"#00A6B4\",\r\n            borderColor: \"#00A6B4\",\r\n            data: data1,\r\n            fill: false,\r\n          },          \r\n          {\r\n            label: \"Deaths\",\r\n            backgroundColor: \"#B21F00\",\r\n            borderColor: \"#B21F00\",\r\n            data: data2,\r\n            fill: false,\r\n          },\r\n          {\r\n            label: \"Recovered\",\r\n            backgroundColor: \"#2FDE00\",\r\n            borderColor: \"#2FDE00\",\r\n            data: data3,\r\n            fill: false,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        legend: {\r\n          labels: {\r\n            usePointStyle: true},\r\n          display: true,\r\n          position: \"bottom\",\r\n        },\r\n        responsive: true,\r\n        aspectRatio: 1.5,\r\n        title: {\r\n          display: true,\r\n          text: \"Cases (Log)\",\r\n          fontSize: 20,\r\n        },\r\n        tooltips: {\r\n          mode: \"index\",\r\n          intersect: false,\r\n          callbacks: {\r\n            label: function(tooltipItem, data) {\r\n              var dataLabel = data.labels[tooltipItem.index];\r\n              var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index].toLocaleString();\r\n    \r\n              if (Chart.helpers.isArray(dataLabel)) {\r\n                dataLabel = dataLabel.slice();\r\n                dataLabel[0] += value;\r\n              } else {\r\n                dataLabel += value;\r\n              }\r\n              return dataLabel;\r\n            }\r\n          }\r\n        },\r\n        hover: {\r\n          mode: \"nearest\",\r\n          intersect: true,\r\n        },\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              gridLines: {\r\n                display: true,\r\n                drawBorder: true,\r\n                drawOnChartArea: false,\r\n              },\r\n              display: true,\r\n              type: \"time\",\r\n              time: {\r\n                unit: \"day\",\r\n              },\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: \"Time\",\r\n              },\r\n            },\r\n          ],\r\n          yAxes: [\r\n            {\r\n              type: \"logarithmic\",\r\n              ticks: {\r\n                beginAtZero: true,\r\n              },\r\n              gridLines: {\r\n                display: true,\r\n                drawBorder: true,\r\n                drawOnChartArea: false,\r\n              },\r\n              display: true,\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: \"Cases\",\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    };\r\n    var ctx = document.getElementById(\"canvasConfirmedLog\").getContext(\"2d\");\r\n    window.myLine = new Chart(ctx, config);\r\n\r\n    var colorNames = Object.keys(window.chartColors);\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n              <h1 class=\"display-4 text-center\" id = \"title-text\">Global Covid-19</h1>\r\n      <hr/>\r\n      <div className=\"GlobalGraphs container-fluid\">\r\n              <MediaCard data = {this.props.cases} />\r\n              <hr/>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-10 offset-xs-1 col-lg-6\">\r\n            <Card style = {{marginBottom: \"10px\"}}><CardContent><canvas aspectRatio\t= \"1\" id=\"canvasConfirmed\"></canvas></CardContent></Card>\r\n          </div>\r\n          <div className=\"col-xs-10 offset-xs-1 col-lg-6\">\r\n          <Card style = {{marginBottom: \"10px\"}}><CardContent><canvas id=\"canvasConfirmedLog\"></canvas></CardContent></Card>\r\n          </div>\r\n          </div>\r\n        <hr/>\r\n        <ContinentCards casesContinents = {this.props.casesContinents} />\r\n        <ContinentCharts casesContinents = {this.props.casesContinents} />\r\n        <TopCountryCard casesCountries = {this.props.casesCountries} cases = {this.props.cases} />\r\n        <GlobalTable casesCountries = {this.props.casesCountries} />\r\n        <div className = \"row\">\r\n      <div className = \"col-12 text-center\">\r\n        <p style = {{textAlign:\"center\", fontSize: \"1rem\"}}>Last Updated: {(new Date(this.props.cases[\"updated\"])).toString()}</p>\r\n      </div>\r\n      \r\n      <div className = \"col-12 text-center\">\r\n      <hr/>\r\n      <p id = \"olivera\" style = {{textAlign:\"center\", fontSize: \"1rem\"}}>developed by <a href = \"https://www.olivera.tech\">olivera.tech</a></p>\r\n\r\n      </div>\r\n      </div>\r\n        {/* <CanadaGraph historyConfirmed = {this.state.historyConfirmed} /> */}\r\n      </div>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default GlobalGraphs;\r\n","C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\SearchPage.js",["79","80"],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  option: {\r\n    fontSize: 15,\r\n    '& > span': {\r\n      fontSize: 18,\r\n    },\r\n  },\r\n});\r\nfunction countryLink(country){\r\n  const words = country.split(\" \");\r\n  for (let i = 0; i < words.length; i++) {\r\n      words[i] = words[i][0].toUpperCase() + words[i].substr(1);\r\n  }\r\n  let countryLink = words.join(\"%20\");\r\n  return countryLink\r\n}\r\n\r\nfunction handleChange (object, value) {\r\nconsole.log(value.name);\r\nwindow.location.pathname='/country/'+countryLink(value.name)\r\n}\r\n\r\n\r\nexport default function CountrySelect({countryList}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"container-fluid text-center\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <h1 class=\"display-4\" id=\"title-text\">\r\n            Search\r\n      </h1>\r\n\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className=\"row\">\r\n        <div style={{ marginTop: 20 }} className=\"col-10 offset-1 col-md-6 offset-md-3\">\r\n          \r\n          <Autocomplete\r\n            onChange= {handleChange}\r\n            id=\"combo-box-demo\"\r\n            options={countryList}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: \"100%\" }}\r\n            renderInput={(params) => <TextField {...params} label=\"Choose a country\" variant=\"outlined\" />}\r\n          />\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\n// const countries = [\r\n//   { code: 'AD', label: 'Andorra', phone: '376' },\r\n//   { code: 'AE', label: 'United Arab Emirates', phone: '971' },\r\n//   { code: 'AF', label: 'Afghanistan', phone: '93' },\r\n//   { code: 'AG', label: 'Antigua and Barbuda', phone: '1-268' },\r\n//   { code: 'AI', label: 'Anguilla', phone: '1-264' },\r\n//   { code: 'AL', label: 'Albania', phone: '355' },\r\n//   { code: 'AM', label: 'Armenia', phone: '374' },\r\n//   { code: 'AO', label: 'Angola', phone: '244' },\r\n//   { code: 'AQ', label: 'Antarctica', phone: '672' },\r\n//   { code: 'AR', label: 'Argentina', phone: '54' },\r\n//   { code: 'AS', label: 'American Samoa', phone: '1-684' },\r\n//   { code: 'AT', label: 'Austria', phone: '43' },\r\n//   { code: 'AU', label: 'Australia', phone: '61', suggested: true },\r\n//   { code: 'AW', label: 'Aruba', phone: '297' },\r\n//   { code: 'AX', label: 'Alland Islands', phone: '358' },\r\n//   { code: 'AZ', label: 'Azerbaijan', phone: '994' },\r\n//   { code: 'BA', label: 'Bosnia and Herzegovina', phone: '387' },\r\n//   { code: 'BB', label: 'Barbados', phone: '1-246' },\r\n//   { code: 'BD', label: 'Bangladesh', phone: '880' },\r\n//   { code: 'BE', label: 'Belgium', phone: '32' },\r\n//   { code: 'BF', label: 'Burkina Faso', phone: '226' },\r\n//   { code: 'BG', label: 'Bulgaria', phone: '359' },\r\n//   { code: 'BH', label: 'Bahrain', phone: '973' },\r\n//   { code: 'BI', label: 'Burundi', phone: '257' },\r\n//   { code: 'BJ', label: 'Benin', phone: '229' },\r\n//   { code: 'BL', label: 'Saint Barthelemy', phone: '590' },\r\n//   { code: 'BM', label: 'Bermuda', phone: '1-441' },\r\n//   { code: 'BN', label: 'Brunei Darussalam', phone: '673' },\r\n//   { code: 'BO', label: 'Bolivia', phone: '591' },\r\n//   { code: 'BR', label: 'Brazil', phone: '55' },\r\n//   { code: 'BS', label: 'Bahamas', phone: '1-242' },\r\n//   { code: 'BT', label: 'Bhutan', phone: '975' },\r\n//   { code: 'BV', label: 'Bouvet Island', phone: '47' },\r\n//   { code: 'BW', label: 'Botswana', phone: '267' },\r\n//   { code: 'BY', label: 'Belarus', phone: '375' },\r\n//   { code: 'BZ', label: 'Belize', phone: '501' },\r\n//   { code: 'CA', label: 'Canada', phone: '1', suggested: true },\r\n//   { code: 'CC', label: 'Cocos (Keeling) Islands', phone: '61' },\r\n//   { code: 'CD', label: 'Congo, Democratic Republic of the', phone: '243' },\r\n//   { code: 'CF', label: 'Central African Republic', phone: '236' },\r\n//   { code: 'CG', label: 'Congo, Republic of the', phone: '242' },\r\n//   { code: 'CH', label: 'Switzerland', phone: '41' },\r\n//   { code: 'CI', label: \"Cote d'Ivoire\", phone: '225' },\r\n//   { code: 'CK', label: 'Cook Islands', phone: '682' },\r\n//   { code: 'CL', label: 'Chile', phone: '56' },\r\n//   { code: 'CM', label: 'Cameroon', phone: '237' },\r\n//   { code: 'CN', label: 'China', phone: '86' },\r\n//   { code: 'CO', label: 'Colombia', phone: '57' },\r\n//   { code: 'CR', label: 'Costa Rica', phone: '506' },\r\n//   { code: 'CU', label: 'Cuba', phone: '53' },\r\n//   { code: 'CV', label: 'Cape Verde', phone: '238' },\r\n//   { code: 'CW', label: 'Curacao', phone: '599' },\r\n//   { code: 'CX', label: 'Christmas Island', phone: '61' },\r\n//   { code: 'CY', label: 'Cyprus', phone: '357' },\r\n//   { code: 'CZ', label: 'Czech Republic', phone: '420' },\r\n//   { code: 'DE', label: 'Germany', phone: '49', suggested: true },\r\n//   { code: 'DJ', label: 'Djibouti', phone: '253' },\r\n//   { code: 'DK', label: 'Denmark', phone: '45' },\r\n//   { code: 'DM', label: 'Dominica', phone: '1-767' },\r\n//   { code: 'DO', label: 'Dominican Republic', phone: '1-809' },\r\n//   { code: 'DZ', label: 'Algeria', phone: '213' },\r\n//   { code: 'EC', label: 'Ecuador', phone: '593' },\r\n//   { code: 'EE', label: 'Estonia', phone: '372' },\r\n//   { code: 'EG', label: 'Egypt', phone: '20' },\r\n//   { code: 'EH', label: 'Western Sahara', phone: '212' },\r\n//   { code: 'ER', label: 'Eritrea', phone: '291' },\r\n//   { code: 'ES', label: 'Spain', phone: '34' },\r\n//   { code: 'ET', label: 'Ethiopia', phone: '251' },\r\n//   { code: 'FI', label: 'Finland', phone: '358' },\r\n//   { code: 'FJ', label: 'Fiji', phone: '679' },\r\n//   { code: 'FK', label: 'Falkland Islands (Malvinas)', phone: '500' },\r\n//   { code: 'FM', label: 'Micronesia, Federated States of', phone: '691' },\r\n//   { code: 'FO', label: 'Faroe Islands', phone: '298' },\r\n//   { code: 'FR', label: 'France', phone: '33', suggested: true },\r\n//   { code: 'GA', label: 'Gabon', phone: '241' },\r\n//   { code: 'GB', label: 'United Kingdom', phone: '44' },\r\n//   { code: 'GD', label: 'Grenada', phone: '1-473' },\r\n//   { code: 'GE', label: 'Georgia', phone: '995' },\r\n//   { code: 'GF', label: 'French Guiana', phone: '594' },\r\n//   { code: 'GG', label: 'Guernsey', phone: '44' },\r\n//   { code: 'GH', label: 'Ghana', phone: '233' },\r\n//   { code: 'GI', label: 'Gibraltar', phone: '350' },\r\n//   { code: 'GL', label: 'Greenland', phone: '299' },\r\n//   { code: 'GM', label: 'Gambia', phone: '220' },\r\n//   { code: 'GN', label: 'Guinea', phone: '224' },\r\n//   { code: 'GP', label: 'Guadeloupe', phone: '590' },\r\n//   { code: 'GQ', label: 'Equatorial Guinea', phone: '240' },\r\n//   { code: 'GR', label: 'Greece', phone: '30' },\r\n//   { code: 'GS', label: 'South Georgia and the South Sandwich Islands', phone: '500' },\r\n//   { code: 'GT', label: 'Guatemala', phone: '502' },\r\n//   { code: 'GU', label: 'Guam', phone: '1-671' },\r\n//   { code: 'GW', label: 'Guinea-Bissau', phone: '245' },\r\n//   { code: 'GY', label: 'Guyana', phone: '592' },\r\n//   { code: 'HK', label: 'Hong Kong', phone: '852' },\r\n//   { code: 'HM', label: 'Heard Island and McDonald Islands', phone: '672' },\r\n//   { code: 'HN', label: 'Honduras', phone: '504' },\r\n//   { code: 'HR', label: 'Croatia', phone: '385' },\r\n//   { code: 'HT', label: 'Haiti', phone: '509' },\r\n//   { code: 'HU', label: 'Hungary', phone: '36' },\r\n//   { code: 'ID', label: 'Indonesia', phone: '62' },\r\n//   { code: 'IE', label: 'Ireland', phone: '353' },\r\n//   { code: 'IL', label: 'Israel', phone: '972' },\r\n//   { code: 'IM', label: 'Isle of Man', phone: '44' },\r\n//   { code: 'IN', label: 'India', phone: '91' },\r\n//   { code: 'IO', label: 'British Indian Ocean Territory', phone: '246' },\r\n//   { code: 'IQ', label: 'Iraq', phone: '964' },\r\n//   { code: 'IR', label: 'Iran, Islamic Republic of', phone: '98' },\r\n//   { code: 'IS', label: 'Iceland', phone: '354' },\r\n//   { code: 'IT', label: 'Italy', phone: '39' },\r\n//   { code: 'JE', label: 'Jersey', phone: '44' },\r\n//   { code: 'JM', label: 'Jamaica', phone: '1-876' },\r\n//   { code: 'JO', label: 'Jordan', phone: '962' },\r\n//   { code: 'JP', label: 'Japan', phone: '81', suggested: true },\r\n//   { code: 'KE', label: 'Kenya', phone: '254' },\r\n//   { code: 'KG', label: 'Kyrgyzstan', phone: '996' },\r\n//   { code: 'KH', label: 'Cambodia', phone: '855' },\r\n//   { code: 'KI', label: 'Kiribati', phone: '686' },\r\n//   { code: 'KM', label: 'Comoros', phone: '269' },\r\n//   { code: 'KN', label: 'Saint Kitts and Nevis', phone: '1-869' },\r\n//   { code: 'KP', label: \"Korea, Democratic People's Republic of\", phone: '850' },\r\n//   { code: 'KR', label: 'Korea, Republic of', phone: '82' },\r\n//   { code: 'KW', label: 'Kuwait', phone: '965' },\r\n//   { code: 'KY', label: 'Cayman Islands', phone: '1-345' },\r\n//   { code: 'KZ', label: 'Kazakhstan', phone: '7' },\r\n//   { code: 'LA', label: \"Lao People's Democratic Republic\", phone: '856' },\r\n//   { code: 'LB', label: 'Lebanon', phone: '961' },\r\n//   { code: 'LC', label: 'Saint Lucia', phone: '1-758' },\r\n//   { code: 'LI', label: 'Liechtenstein', phone: '423' },\r\n//   { code: 'LK', label: 'Sri Lanka', phone: '94' },\r\n//   { code: 'LR', label: 'Liberia', phone: '231' },\r\n//   { code: 'LS', label: 'Lesotho', phone: '266' },\r\n//   { code: 'LT', label: 'Lithuania', phone: '370' },\r\n//   { code: 'LU', label: 'Luxembourg', phone: '352' },\r\n//   { code: 'LV', label: 'Latvia', phone: '371' },\r\n//   { code: 'LY', label: 'Libya', phone: '218' },\r\n//   { code: 'MA', label: 'Morocco', phone: '212' },\r\n//   { code: 'MC', label: 'Monaco', phone: '377' },\r\n//   { code: 'MD', label: 'Moldova, Republic of', phone: '373' },\r\n//   { code: 'ME', label: 'Montenegro', phone: '382' },\r\n//   { code: 'MF', label: 'Saint Martin (French part)', phone: '590' },\r\n//   { code: 'MG', label: 'Madagascar', phone: '261' },\r\n//   { code: 'MH', label: 'Marshall Islands', phone: '692' },\r\n//   { code: 'MK', label: 'Macedonia, the Former Yugoslav Republic of', phone: '389' },\r\n//   { code: 'ML', label: 'Mali', phone: '223' },\r\n//   { code: 'MM', label: 'Myanmar', phone: '95' },\r\n//   { code: 'MN', label: 'Mongolia', phone: '976' },\r\n//   { code: 'MO', label: 'Macao', phone: '853' },\r\n//   { code: 'MP', label: 'Northern Mariana Islands', phone: '1-670' },\r\n//   { code: 'MQ', label: 'Martinique', phone: '596' },\r\n//   { code: 'MR', label: 'Mauritania', phone: '222' },\r\n//   { code: 'MS', label: 'Montserrat', phone: '1-664' },\r\n//   { code: 'MT', label: 'Malta', phone: '356' },\r\n//   { code: 'MU', label: 'Mauritius', phone: '230' },\r\n//   { code: 'MV', label: 'Maldives', phone: '960' },\r\n//   { code: 'MW', label: 'Malawi', phone: '265' },\r\n//   { code: 'MX', label: 'Mexico', phone: '52' },\r\n//   { code: 'MY', label: 'Malaysia', phone: '60' },\r\n//   { code: 'MZ', label: 'Mozambique', phone: '258' },\r\n//   { code: 'NA', label: 'Namibia', phone: '264' },\r\n//   { code: 'NC', label: 'New Caledonia', phone: '687' },\r\n//   { code: 'NE', label: 'Niger', phone: '227' },\r\n//   { code: 'NF', label: 'Norfolk Island', phone: '672' },\r\n//   { code: 'NG', label: 'Nigeria', phone: '234' },\r\n//   { code: 'NI', label: 'Nicaragua', phone: '505' },\r\n//   { code: 'NL', label: 'Netherlands', phone: '31' },\r\n//   { code: 'NO', label: 'Norway', phone: '47' },\r\n//   { code: 'NP', label: 'Nepal', phone: '977' },\r\n//   { code: 'NR', label: 'Nauru', phone: '674' },\r\n//   { code: 'NU', label: 'Niue', phone: '683' },\r\n//   { code: 'NZ', label: 'New Zealand', phone: '64' },\r\n//   { code: 'OM', label: 'Oman', phone: '968' },\r\n//   { code: 'PA', label: 'Panama', phone: '507' },\r\n//   { code: 'PE', label: 'Peru', phone: '51' },\r\n//   { code: 'PF', label: 'French Polynesia', phone: '689' },\r\n//   { code: 'PG', label: 'Papua New Guinea', phone: '675' },\r\n//   { code: 'PH', label: 'Philippines', phone: '63' },\r\n//   { code: 'PK', label: 'Pakistan', phone: '92' },\r\n//   { code: 'PL', label: 'Poland', phone: '48' },\r\n//   { code: 'PM', label: 'Saint Pierre and Miquelon', phone: '508' },\r\n//   { code: 'PN', label: 'Pitcairn', phone: '870' },\r\n//   { code: 'PR', label: 'Puerto Rico', phone: '1' },\r\n//   { code: 'PS', label: 'Palestine, State of', phone: '970' },\r\n//   { code: 'PT', label: 'Portugal', phone: '351' },\r\n//   { code: 'PW', label: 'Palau', phone: '680' },\r\n//   { code: 'PY', label: 'Paraguay', phone: '595' },\r\n//   { code: 'QA', label: 'Qatar', phone: '974' },\r\n//   { code: 'RE', label: 'Reunion', phone: '262' },\r\n//   { code: 'RO', label: 'Romania', phone: '40' },\r\n//   { code: 'RS', label: 'Serbia', phone: '381' },\r\n//   { code: 'RU', label: 'Russian Federation', phone: '7' },\r\n//   { code: 'RW', label: 'Rwanda', phone: '250' },\r\n//   { code: 'SA', label: 'Saudi Arabia', phone: '966' },\r\n//   { code: 'SB', label: 'Solomon Islands', phone: '677' },\r\n//   { code: 'SC', label: 'Seychelles', phone: '248' },\r\n//   { code: 'SD', label: 'Sudan', phone: '249' },\r\n//   { code: 'SE', label: 'Sweden', phone: '46' },\r\n//   { code: 'SG', label: 'Singapore', phone: '65' },\r\n//   { code: 'SH', label: 'Saint Helena', phone: '290' },\r\n//   { code: 'SI', label: 'Slovenia', phone: '386' },\r\n//   { code: 'SJ', label: 'Svalbard and Jan Mayen', phone: '47' },\r\n//   { code: 'SK', label: 'Slovakia', phone: '421' },\r\n//   { code: 'SL', label: 'Sierra Leone', phone: '232' },\r\n//   { code: 'SM', label: 'San Marino', phone: '378' },\r\n//   { code: 'SN', label: 'Senegal', phone: '221' },\r\n//   { code: 'SO', label: 'Somalia', phone: '252' },\r\n//   { code: 'SR', label: 'Suriname', phone: '597' },\r\n//   { code: 'SS', label: 'South Sudan', phone: '211' },\r\n//   { code: 'ST', label: 'Sao Tome and Principe', phone: '239' },\r\n//   { code: 'SV', label: 'El Salvador', phone: '503' },\r\n//   { code: 'SX', label: 'Sint Maarten (Dutch part)', phone: '1-721' },\r\n//   { code: 'SY', label: 'Syrian Arab Republic', phone: '963' },\r\n//   { code: 'SZ', label: 'Swaziland', phone: '268' },\r\n//   { code: 'TC', label: 'Turks and Caicos Islands', phone: '1-649' },\r\n//   { code: 'TD', label: 'Chad', phone: '235' },\r\n//   { code: 'TF', label: 'French Southern Territories', phone: '262' },\r\n//   { code: 'TG', label: 'Togo', phone: '228' },\r\n//   { code: 'TH', label: 'Thailand', phone: '66' },\r\n//   { code: 'TJ', label: 'Tajikistan', phone: '992' },\r\n//   { code: 'TK', label: 'Tokelau', phone: '690' },\r\n//   { code: 'TL', label: 'Timor-Leste', phone: '670' },\r\n//   { code: 'TM', label: 'Turkmenistan', phone: '993' },\r\n//   { code: 'TN', label: 'Tunisia', phone: '216' },\r\n//   { code: 'TO', label: 'Tonga', phone: '676' },\r\n//   { code: 'TR', label: 'Turkey', phone: '90' },\r\n//   { code: 'TT', label: 'Trinidad and Tobago', phone: '1-868' },\r\n//   { code: 'TV', label: 'Tuvalu', phone: '688' },\r\n//   { code: 'TW', label: 'Taiwan, Province of China', phone: '886' },\r\n//   { code: 'TZ', label: 'United Republic of Tanzania', phone: '255' },\r\n//   { code: 'UA', label: 'Ukraine', phone: '380' },\r\n//   { code: 'UG', label: 'Uganda', phone: '256' },\r\n//   { code: 'US', label: 'United States', phone: '1', suggested: true },\r\n//   { code: 'UY', label: 'Uruguay', phone: '598' },\r\n//   { code: 'UZ', label: 'Uzbekistan', phone: '998' },\r\n//   { code: 'VA', label: 'Holy See (Vatican City State)', phone: '379' },\r\n//   { code: 'VC', label: 'Saint Vincent and the Grenadines', phone: '1-784' },\r\n//   { code: 'VE', label: 'Venezuela', phone: '58' },\r\n//   { code: 'VG', label: 'British Virgin Islands', phone: '1-284' },\r\n//   { code: 'VI', label: 'US Virgin Islands', phone: '1-340' },\r\n//   { code: 'VN', label: 'Vietnam', phone: '84' },\r\n//   { code: 'VU', label: 'Vanuatu', phone: '678' },\r\n//   { code: 'WF', label: 'Wallis and Futuna', phone: '681' },\r\n//   { code: 'WS', label: 'Samoa', phone: '685' },\r\n//   { code: 'XK', label: 'Kosovo', phone: '383' },\r\n//   { code: 'YE', label: 'Yemen', phone: '967' },\r\n//   { code: 'YT', label: 'Mayotte', phone: '262' },\r\n//   { code: 'ZA', label: 'South Africa', phone: '27' },\r\n//   { code: 'ZM', label: 'Zambia', phone: '260' },\r\n//   { code: 'ZW', label: 'Zimbabwe', phone: '263' },\r\n// ];","C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\utils.js",["81"],"'use strict';\n\nwindow.chartColors = {\n\tred: 'rgb(255, 99, 132)',\n\torange: 'rgb(255, 159, 64)',\n\tyellow: 'rgb(255, 205, 86)',\n\tgreen: 'rgb(75, 192, 192)',\n\tblue: 'rgb(54, 162, 235)',\n\tpurple: 'rgb(153, 102, 255)',\n\tgrey: 'rgb(201, 203, 207)'\n};\n\n(function(global) {\n\tvar MONTHS = [\n\t\t'January',\n\t\t'February',\n\t\t'March',\n\t\t'April',\n\t\t'May',\n\t\t'June',\n\t\t'July',\n\t\t'August',\n\t\t'September',\n\t\t'October',\n\t\t'November',\n\t\t'December'\n\t];\n\n\tvar COLORS = [\n\t\t'#4dc9f6',\n\t\t'#f67019',\n\t\t'#f53794',\n\t\t'#537bc4',\n\t\t'#acc236',\n\t\t'#166a8f',\n\t\t'#00a950',\n\t\t'#58595b',\n\t\t'#8549ba'\n\t];\n\n\tvar Samples = global.Samples || (global.Samples = {});\n\tvar Color = global.Color;\n\n\tSamples.utils = {\n\t\t// Adapted from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n\t\tsrand: function(seed) {\n\t\t\tthis._seed = seed;\n\t\t},\n\n\t\trand: function(min, max) {\n\t\t\tvar seed = this._seed;\n\t\t\tmin = min === undefined ? 0 : min;\n\t\t\tmax = max === undefined ? 1 : max;\n\t\t\tthis._seed = (seed * 9301 + 49297) % 233280;\n\t\t\treturn min + (this._seed / 233280) * (max - min);\n\t\t},\n\n\t\tnumbers: function(config) {\n\t\t\tvar cfg = config || {};\n\t\t\tvar min = cfg.min || 0;\n\t\t\tvar max = cfg.max || 1;\n\t\t\tvar from = cfg.from || [];\n\t\t\tvar count = cfg.count || 8;\n\t\t\tvar decimals = cfg.decimals || 8;\n\t\t\tvar continuity = cfg.continuity || 1;\n\t\t\tvar dfactor = Math.pow(10, decimals) || 0;\n\t\t\tvar data = [];\n\t\t\tvar i, value;\n\n\t\t\tfor (i = 0; i < count; ++i) {\n\t\t\t\tvalue = (from[i] || 0) + this.rand(min, max);\n\t\t\t\tif (this.rand() <= continuity) {\n\t\t\t\t\tdata.push(Math.round(dfactor * value) / dfactor);\n\t\t\t\t} else {\n\t\t\t\t\tdata.push(null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t},\n\n\t\tlabels: function(config) {\n\t\t\tvar cfg = config || {};\n\t\t\tvar min = cfg.min || 0;\n\t\t\tvar max = cfg.max || 100;\n\t\t\tvar count = cfg.count || 8;\n\t\t\tvar step = (max - min) / count;\n\t\t\tvar decimals = cfg.decimals || 8;\n\t\t\tvar dfactor = Math.pow(10, decimals) || 0;\n\t\t\tvar prefix = cfg.prefix || '';\n\t\t\tvar values = [];\n\t\t\tvar i;\n\n\t\t\tfor (i = min; i < max; i += step) {\n\t\t\t\tvalues.push(prefix + Math.round(dfactor * i) / dfactor);\n\t\t\t}\n\n\t\t\treturn values;\n\t\t},\n\n\t\tmonths: function(config) {\n\t\t\tvar cfg = config || {};\n\t\t\tvar count = cfg.count || 12;\n\t\t\tvar section = cfg.section;\n\t\t\tvar values = [];\n\t\t\tvar i, value;\n\n\t\t\tfor (i = 0; i < count; ++i) {\n\t\t\t\tvalue = MONTHS[Math.ceil(i) % 12];\n\t\t\t\tvalues.push(value.substring(0, section));\n\t\t\t}\n\n\t\t\treturn values;\n\t\t},\n\n\t\tcolor: function(index) {\n\t\t\treturn COLORS[index % COLORS.length];\n\t\t},\n\n\t\ttransparentize: function(color, opacity) {\n\t\t\tvar alpha = opacity === undefined ? 0.5 : 1 - opacity;\n\t\t\treturn Color(color).alpha(alpha).rgbString();\n\t\t}\n\t};\n\n\t// DEPRECATED\n\twindow.randomScalingFactor = function() {\n\t\treturn Math.round(Samples.utils.rand(-100, 100));\n\t};\n\n\t// INITIALIZATION\n\n\tSamples.utils.srand(Date.now());\n\n\t// Google Analytics\n\t/* eslint-disable */\n\tif (document.location.hostname.match(/^(www\\.)?chartjs\\.org$/)) {\n\t\t(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n\t\t(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n\t\tm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n\t\t})(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\t\tga('create', 'UA-28909194-3', 'auto');\n\t\tga('send', 'pageview');\n\t}\n\t/* eslint-enable */\n\n}(this));\n","C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\ComparePage.js",["82","83","84"],"C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\CountryPage.js",["85","86","87"],"C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\ContinentCharts.js",[],"C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\GlobalCards.js",["88"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    // maxWidth: 800,\r\n    marginBottom: \"10px\"},\r\n  media: {\r\n    height: 0,\r\n  },\r\n});\r\nexport default function MediaCard({data}) {\r\n  const classes = useStyles();\r\n\r\n        \r\n\r\n  return (\r\n    <div>\r\n      <div className = \"row\">\r\n      <div className = \"col-xs-8 offset-xs-2 col-sm-6 col-lg-3\">\r\n    <Card className={classes.root} style = {{borderTop: \"#00A6B4 5px solid\"}}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image = './Coronavirus_3D_illustration_by_CDC_1600x900.png'\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n            Total Confirmed Cases\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{display: \"inline\"}}>\r\n            {data.cases.toLocaleString()}\r\n          </Typography>\r\n          <Typography variant=\"body1\" component=\"p\" style={{color: \"red\", display: \"inline\", marginLeft: 10}}>\r\n          +{data.todayCases.toLocaleString()}\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\" style={{marginTop: 5}}>\r\n            {((data.cases)/(data.population)).toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2})} of Global Population\r\n          </Typography>\r\n        </CardContent>\r\n    </Card>\r\n    </div>\r\n\r\n    <div className = \"col-xs-8 offset-xs-2 col-sm-6 col-lg-3\">\r\n    <Card className={classes.root} style = {{borderTop: \"#C9DE00 5px solid\"}}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image = './Coronavirus_3D_illustration_by_CDC_1600x900.png'\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n            Total Active Cases\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{display: \"inline\"}}>\r\n            {data.active.toLocaleString()}\r\n          </Typography>\r\n          <Typography variant=\"body1\" component=\"p\" style={{color: ((data.todayCases - data.todayRecovered)<0?\"green\":\"red\"), display: \"inline\", marginLeft: 10}}>\r\n          {(data.todayCases - data.todayRecovered)<0?\"\":\"+\"}{(data.todayCases - data.todayRecovered).toLocaleString()}\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\" style={{marginTop: 5}}>\r\n            {(data.critical.toLocaleString())} Remain in Critical Condition\r\n          </Typography>\r\n        </CardContent>\r\n    </Card>\r\n    </div>\r\n\r\n    <div className = \"col-xs-8 offset-xs-2 col-sm-6 col-lg-3\">\r\n    <Card className={classes.root} style = {{borderTop: \"#2FDE00 5px solid\"}}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image = './Coronavirus_3D_illustration_by_CDC_1600x900.png'\r\n          title=\"Covid-19\"\r\n        />\r\n        <CardContent>\r\n        <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n            Total Recovered\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{display: \"inline\"}}>\r\n            {data.recovered.toLocaleString()}\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\" style={{color: \"green\", display: \"inline\", marginLeft: 10}}>\r\n          +{data.todayRecovered.toLocaleString()}\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\" style={{marginTop: 5}}>\r\n            {((data.recovered)/(data.cases)).toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2})} of Confirmed Cases\r\n          </Typography>\r\n        </CardContent>\r\n    </Card>\r\n    </div>\r\n    <div className = \"col-xs-8 offset-xs-2 col-sm-6 col-lg-3\">\r\n    <Card className={classes.root} style = {{borderTop: \"#B21F00 5px solid\"}}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image = './Coronavirus_3D_illustration_by_CDC_1600x900.png'\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n        <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n            Total Deaths\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{display: \"inline\"}}>\r\n            {data.deaths.toLocaleString()}\r\n          </Typography>\r\n          <Typography variant=\"body1\" component=\"p\" style={{color: \"red\", display: \"inline\", marginLeft: 10}}>\r\n          +{data.todayDeaths.toLocaleString()}\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\" style={{marginTop: 5}}>\r\n            {((data.deaths)/(data.cases)).toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2})} of Confirmed Cases\r\n          </Typography>\r\n        </CardContent>\r\n    </Card>\r\n    </div>\r\n    </div>\r\n    </div>\r\n  \r\n  );\r\n}\r\n","C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\ContinentCards.js",["89"],"C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\GlobalTable.js",[],"C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\TopCountryCard.js",["90","91","92","93","94","95"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    // maxWidth: 800,\r\n    marginBottom: \"10px\"},\r\n  media: {\r\n    height: 5,\r\n  },\r\n});\r\n\r\n\r\nlet labelCountry = [];\r\nlet casesCountry = [];\r\nlet todayCases = [];\r\nlet casesPercentagePop = [];\r\nlet percentWorldCases = [];\r\nlet fatalityRateCountry = [];\r\nlet countryCards = [];\r\n\r\n\r\nclass TopCountryCard extends React.Component {\r\n \r\n\r\n\r\n  testRun() {\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      labelCountry.push(this.props.casesCountries[i][\"country\"]);\r\n      casesCountry.push(this.props.casesCountries[i][\"cases\"]);\r\n      casesPercentagePop.push((this.props.casesCountries[i][\"cases\"])/(this.props.casesCountries[i][\"population\"]));\r\n      todayCases.push(this.props.casesCountries[i][\"todayCases\"]);  \r\n      percentWorldCases.push((this.props.casesCountries[i][\"cases\"])/(this.props.cases[\"cases\"]));\r\n      fatalityRateCountry.push((this.props.casesCountries[i][\"deaths\"])/(this.props.casesCountries[i][\"cases\"]));\r\n      this.createCards();\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    this.testRun();\r\n  };\r\n\r\n  createCards() {\r\n    const { classes } = this.props;\r\n    for (let i = 0; i < labelCountry.length; i++) {\r\n      countryCards[i] = (\r\n        <div className = \"col-xs-8 offset-xs-2 col-sm-6 col-lg-3\">\r\n    <Card className={classes.root} style = {{marginBottom: 10, borderTop: \"#B21F00 5px solid\"}}>\r\n      <CardActionArea>\r\n        <Link style = {{textDecoration:\"none\", color:\"black\"}}to={\"/country/\"+labelCountry[i]}>\r\n        <CardMedia\r\n          className={classes.media}\r\n        />\r\n\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n            {labelCountry[i]}\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"h6\" component=\"h2\" style = {{display: \"inline\", marginBottom: 0}}>\r\n            {casesCountry[i].toLocaleString()} cases\r\n          </Typography>\r\n          <Typography variant=\"body1\" component=\"p\" color = \"textSecondary\" style={{display: \"inline\", marginTop: 0, marginLeft:5, fontSize: \"0.8rem\"}}>\r\n          {todayCases[i]? \"+\" : null}{todayCases[i]? todayCases[i].toLocaleString():null}\r\n          </Typography>\r\n          <Typography variant=\"h6\" component=\"h3\" style={{fontWeight:\"bold\", marginBottom: 5, fontSize: \"1rem\"}}>\r\n          {percentWorldCases[i].toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2})} of total world cases\r\n          </Typography>\r\n          <Typography variant=\"body1\" component=\"p\" color = \"textSecondary\" style={{marginTop: 0, fontSize: \"0.8rem\"}}>\r\n          {casesPercentagePop[i].toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2})} of country infected\r\n          </Typography>\r\n          <Typography variant=\"body1\" component=\"p\" color = \"textSecondary\" style={{marginTop: 0, fontSize: \"0.8rem\"}}>\r\n            {(fatalityRateCountry[i].toLocaleString(undefined,{style: 'percent', minimumFractionDigits:2}))} fatality rate\r\n          </Typography>\r\n        </CardContent>\r\n        </Link>\r\n      </CardActionArea>\r\n    </Card>\r\n    </div>\r\n\r\n      )\r\n    }\r\n    this.forceUpdate();\r\n  }\r\n\r\n  render() {\r\n\r\n    if (labelCountry.length == 0) {\r\n      return (\r\n        <div class=\"text-center\">\r\n          <div className=\"spinner-border\" style={{ width: \"3rem\", height: \"3rem\" }} role=\"status\">\r\n            <span className=\"visually-hidden\"></span>\r\n          </div>\r\n          <h3 id=\"loading-text\">Loading...</h3>\r\n        </div>\r\n      )\r\n    }\r\n    for (let i = 0; i < labelCountry.length; i++) {\r\n      return (\r\n        <div> \r\n          <h1 class=\"display-4 text-center\" id = \"country-text\" style = {{fontSize: \"3rem\", margin: 25}}>\r\n            Most Affected Countries\r\n            </h1>\r\n          <hr/>\r\n        <div className = \"row\">\r\n          {countryCards}\r\n    </div>\r\n    <hr/>\r\n    </div>\r\n\r\n      )\r\n    }}}\r\n    export default withStyles(useStyles)(TopCountryCard);","C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\CompareGraphs.js",["96","97","98"],"C:\\Users\\olive\\covid19\\covid19-dashboard\\src\\CompareTable.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":16,"column":5,"nodeType":"105","messageId":"106","endLine":16,"endColumn":18},{"ruleId":"107","severity":1,"message":"108","line":65,"column":67,"nodeType":"109","messageId":"110","endLine":65,"endColumn":69},{"ruleId":"107","severity":1,"message":"108","line":71,"column":69,"nodeType":"109","messageId":"110","endLine":71,"endColumn":71},{"ruleId":"103","severity":1,"message":"111","line":144,"column":9,"nodeType":"105","messageId":"106","endLine":144,"endColumn":19},{"ruleId":"103","severity":1,"message":"111","line":259,"column":9,"nodeType":"105","messageId":"106","endLine":259,"endColumn":19},{"ruleId":"103","severity":1,"message":"112","line":6,"column":10,"nodeType":"105","messageId":"106","endLine":6,"endColumn":18},{"ruleId":"103","severity":1,"message":"113","line":33,"column":9,"nodeType":"105","messageId":"106","endLine":33,"endColumn":16},{"ruleId":"114","severity":1,"message":"115","line":1,"column":1,"nodeType":"116","messageId":"117","endLine":1,"endColumn":14,"fix":"118"},{"ruleId":"103","severity":1,"message":"119","line":17,"column":6,"nodeType":"105","messageId":"106","endLine":17,"endColumn":22},{"ruleId":"103","severity":1,"message":"120","line":19,"column":10,"nodeType":"105","messageId":"106","endLine":19,"endColumn":15},{"ruleId":"107","severity":1,"message":"108","line":49,"column":37,"nodeType":"109","messageId":"110","endLine":49,"endColumn":39},{"ruleId":"103","severity":1,"message":"111","line":243,"column":9,"nodeType":"105","messageId":"106","endLine":243,"endColumn":19},{"ruleId":"103","severity":1,"message":"111","line":399,"column":9,"nodeType":"105","messageId":"106","endLine":399,"endColumn":19},{"ruleId":"103","severity":1,"message":"111","line":518,"column":9,"nodeType":"105","messageId":"106","endLine":518,"endColumn":19},{"ruleId":"103","severity":1,"message":"121","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":22},{"ruleId":"103","severity":1,"message":"121","line":5,"column":8,"nodeType":"105","messageId":"106","endLine":5,"endColumn":22},{"ruleId":"103","severity":1,"message":"122","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":19},{"ruleId":"103","severity":1,"message":"123","line":9,"column":8,"nodeType":"105","messageId":"106","endLine":9,"endColumn":14},{"ruleId":"103","severity":1,"message":"124","line":11,"column":8,"nodeType":"105","messageId":"106","endLine":11,"endColumn":12},{"ruleId":"103","severity":1,"message":"125","line":13,"column":27,"nodeType":"105","messageId":"106","endLine":13,"endColumn":33},{"ruleId":"103","severity":1,"message":"126","line":13,"column":35,"nodeType":"105","messageId":"106","endLine":13,"endColumn":40},{"ruleId":"107","severity":1,"message":"108","line":102,"column":29,"nodeType":"109","messageId":"110","endLine":102,"endColumn":31},{"ruleId":"103","severity":1,"message":"127","line":5,"column":10,"nodeType":"105","messageId":"106","endLine":5,"endColumn":20},{"ruleId":"103","severity":1,"message":"128","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":18},{"ruleId":"103","severity":1,"message":"111","line":136,"column":13,"nodeType":"105","messageId":"106","endLine":136,"endColumn":23},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'countryRouter' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'colorNames' is assigned a value but never used.","'Redirect' is defined but never used.","'classes' is assigned a value but never used.","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"131","text":"132"},"'historyCountries' is defined but never used.","'count' is assigned a value but never used.","'CardActionArea' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'makeStyles' is defined but never used.","'Typography' is defined but never used.","no-global-assign","no-unsafe-negation",[0,13],""]